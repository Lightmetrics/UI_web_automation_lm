{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 1}, "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(),'lmpresales')]/following-sibling::mat-icon\"}\n     (Session info: chrome=119.0.6045.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n   Stacktrace:\n   #0 0x56144730c5e3 <unknown>\n   #1 0x561446fcf0b7 <unknown>\n   #2 0x56144701cf53 <unknown>\n   #3 0x56144701d051 <unknown>\n   #4 0x5614470629c4 <unknown>\n   #5 0x561447043f1d <unknown>\n   #6 0x56144705fb3d <unknown>\n   #7 0x561447043cc3 <unknown>\n   #8 0x56144700f0e4 <unknown>\n   #9 0x5614470100ae <unknown>\n   #10 0x5614472d2ce1 <unknown>\n   #11 0x5614472d6b7e <unknown>\n   #12 0x5614472c04b5 <unknown>\n   #13 0x5614472d77d6 <unknown>\n   #14 0x5614472a3dbf <unknown>\n   #15 0x5614472fa748 <unknown>\n   #16 0x5614472fa917 <unknown>\n   #17 0x56144730b773 <unknown>\n   #18 0x7f721a690402 <unknown>\n", "test_name": "test_lm_regression_suite[Attrix]", "rerun": "0"}, "1": {"status": "FAIL", "message": "   selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n     (failed to check if window was closed: disconnected: not connected to DevTools)\n     (Session info: chrome=119.0.6045.159)\n   Stacktrace:\n   #0 0x55ea3ba9c5e3 <unknown>\n   #1 0x55ea3b75f0b7 <unknown>\n   #2 0x55ea3b74443e <unknown>\n   #3 0x55ea3b7442e3 <unknown>\n   #4 0x55ea3b7617e2 <unknown>\n   #5 0x55ea3b7ef337 <unknown>\n   #6 0x55ea3b7d3cc3 <unknown>\n   #7 0x55ea3b79f0e4 <unknown>\n   #8 0x55ea3b7a00ae <unknown>\n   #9 0x55ea3ba62ce1 <unknown>\n   #10 0x55ea3ba66b7e <unknown>\n   #11 0x55ea3ba504b5 <unknown>\n   #12 0x55ea3ba677d6 <unknown>\n   #13 0x55ea3ba33dbf <unknown>\n   #14 0x55ea3ba8a748 <unknown>\n   #15 0x55ea3ba8a917 <unknown>\n   #16 0x55ea3ba9b773 <unknown>\n   #17 0x7f3c7a090402 <unknown>\n   selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n     (failed to check if window was closed: disconnected: not connected to DevTools)\n     (Session info: chrome=119.0.6045.159)\n   Stacktrace:\n   #0 0x55ea3ba9c5e3 <unknown>\n   #1 0x55ea3b75f0b7 <unknown>\n   #2 0x55ea3b74443e <unknown>\n   #3 0x55ea3b7442e3 <unknown>\n   #4 0x55ea3b7617e2 <unknown>\n   #5 0x55ea3b7ef337 <unknown>\n   #6 0x55ea3b7d3cc3 <unknown>\n   #7 0x55ea3b79f0e4 <unknown>\n   #8 0x55ea3b7a00ae <unknown>\n   #9 0x55ea3ba62ce1 <unknown>\n   #10 0x55ea3ba66b7e <unknown>\n   #11 0x55ea3ba504b5 <unknown>\n   #12 0x55ea3ba677d6 <unknown>\n   #13 0x55ea3ba33dbf <unknown>\n   #14 0x55ea3ba8a748 <unknown>\n   #15 0x55ea3ba8a917 <unknown>\n   #16 0x55ea3ba9b773 <unknown>\n   #17 0x7f3c7a090402 <unknown>\n", "test_name": "test_lm_regression_suite[Kynection]", "rerun": "0"}, "2": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_lm_regression_suite[Advtracking]>>\n\n    @pytest.fixture(scope=\"function\", autouse=True)\n    def setup(request):\n        global driver\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n            options = Options()\n            # options.add_argument('--headless')\n            options.add_argument('--no-sandbox')\n            options.add_argument('--disable-dev-shm-usage')\n            # driver = webdriver.Chrome(ChromeDriverManager().install())\n            driver = webdriver.Chrome(service=Service(\"/home/a/Downloads/chromedriver-linux64/chromedriver\"))\n            # driver = webdriver.Chrome(executable_path=\"C:\\\\chromedriver.exe\")\n        elif browser_name == \"firefox\":\n            driver = webdriver.Firefox(executable_path=\"C:\\\\geckodriver.exe\")\n        elif browser_name == \"IE\":\n            print(\"IE driver\")\n>       driver.get(\"https://admin.lightmetrics.co/statistics\")\n\nconftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5ba6856710>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...\\\\n#23 0x559fe93b8917 \\\\u003Cunknown>\\\\n#24 0x559fe93c9773 \\\\u003Cunknown>\\\\n#25 0x7f7ff1090402 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=119.0.6045.159)\nE       Stacktrace:\nE       #0 0x559fe93ca5e3 <unknown>\nE       #1 0x559fe908d0b7 <unknown>\nE       #2 0x559fe9084d6a <unknown>\nE       #3 0x559fe9074137 <unknown>\nE       #4 0x559fe90757f6 <unknown>\nE       #5 0x559fe9074436 <unknown>\nE       #6 0x559fe907315c <unknown>\nE       #7 0x559fe90730a9 <unknown>\nE       #8 0x559fe9071481 <unknown>\nE       #9 0x559fe9071cca <unknown>\nE       #10 0x559fe908fe8e <unknown>\nE       #11 0x559fe911e345 <unknown>\nE       #12 0x559fe9101ef2 <unknown>\nE       #13 0x559fe911db3d <unknown>\nE       #14 0x559fe9101cc3 <unknown>\nE       #15 0x559fe90cd0e4 <unknown>\nE       #16 0x559fe90ce0ae <unknown>\nE       #17 0x559fe9390ce1 <unknown>\nE       #18 0x559fe9394b7e <unknown>\nE       #19 0x559fe937e4b5 <unknown>\nE       #20 0x559fe93957d6 <unknown>\nE       #21 0x559fe9361dbf <unknown>\nE       #22 0x559fe93b8748 <unknown>\nE       #23 0x559fe93b8917 <unknown>\nE       #24 0x559fe93c9773 <unknown>\nE       #25 0x7f7ff1090402 <unknown>\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException\n", "test_name": "test_lm_regression_suite[Advtracking]", "rerun": "0"}}, "suite_name": "test_LM_RegressionSuite.py"}}}, "date": "November 22, 2023", "start_time": 1700637848.0737653, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "2", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "3"}